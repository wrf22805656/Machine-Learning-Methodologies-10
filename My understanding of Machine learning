Supervised Learning vs Unsupervised Learning
监督学习:当给定一定自变量的样本集，通过运算可以得到指定目标变量的结果。（标称型和数值型）
非监督学习：未知目标变量
机器学习：除了一些无关紧要的情况，人们很难直接从原始数据本身获得所需要的信息。例如，对于垃圾邮件的检测，侦测一个单词是否存在并没有太大的作用。
为了测试机器学习算法的效果，通常使用两套独立的样本集：训练数据和测试数据。

监督学习：
（1） k-近邻算法    线性回归
（2）朴素贝叶斯算法  局部加权线性回归
（3）支持向量机  Ridge 回归
（4）决策树 LASSO 最小回归系数估计


无监督学习：
（1）K均值   最大期望
（2）DBSCAN  Parzen窗设计

如何选择合适的算法：
（1）使用机器学习算法的目的，想要算法完成何种任务，比如：是预测明天下雨的概率还是对投票者按照兴趣分组；
（2）需要分析或者收集的数据是什么
-- 如果想要预测目标变量的值，则可以选择监督学习算法，否则可以选择非监督学习算法。确定选择监督学习算法后，需要进一步确定目标变量类型。如果目标变量是
离散的，那么久使用分类算法。如果是非监督学习，需要进一步分析是否需要将数据划分为离散的组。如果这是唯一的需求，则使用聚类算法，如果还需要估计数据
与每个分组的相似程度，则需要使用密度估计算法。
-- 对实际数据了解越充分，越容易创建符合实际需求的应用程序。


开发机器学习应用程序的步骤：
本书学习和使用机器学习算法开发应用程序，通常遵循以下的步骤：
（1） 收集数据。我们可以使用很多方法收集样本数据，制作网络爬虫从网站上抽取数据，从RSS反馈或者API中得到信息，设备发送过来的实测数据。
（2） 准备输入数据。得到数据之后，还必须确保数据格式符合要求。
（3） 分析输入数据。人工分析以前得到的数据。确定数据集中没有垃圾数据。
（4） 算法训练：提取抽取知识或信息，这里得到的知识需要存储为计算机可以处理的格式
（5） 测试算法
（6） 使用算法


numpy--cypress 函数库基础，
*********注意  
比如你 from numpy import *
得到 array 是数组，你需要转换成矩阵  用mat()
for example : randMat = mat(random.rand(4,4))
你得到一个矩阵，如果这个矩阵求逆矩阵  就需要用到 randMat.I 
